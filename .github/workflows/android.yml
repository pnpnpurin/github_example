name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2

      # Setting JDK
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Using caches
      - name: Gradle Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

#  build:
#    needs: setup
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2

#      # Build
#      - name: Build with Gradle
#        run: ./gradlew assembleDebug

#      # Unit Test
#      - name: Unit Test
#        run: ./gradlew testDebugUnitTest
#
#      # Archiving code coverage results
#      - name: Archive code coverage results
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: code-coverage-report
#          path: app/build/reports/tests/testDebugUnitTest

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: test
          releaseNotes: "test deploy"
          file: app/build/outputs/apk/debug/app-debug.apk

      - name: Set COMMIT_MESSAGE
        run: echo "commit_message=$(echo ${{ github.event.head_commit.message }} | tr '\n' ' ')" >> $GITHUB_ENV
      - name: post message to Slack
        if: success()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: "New app was deployed!!"
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Commit Message",
                    "value": "$commit_message"
                  },
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  }
                ]
              }
            ]
