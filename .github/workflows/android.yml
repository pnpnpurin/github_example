name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2

      # Setting JDK
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Using caches
      - name: Gradle Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Build
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # Unit Test
      - name: Unit Test
        run: ./gradlew testDebugUnitTest
        
      # Archiving code coverage results
      - name: Archive code coverage results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: app/build/reports/tests/testDebugUnitTest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build with Gradle
        run: ./gradlew assembleDebug

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: test
          file: app/build/outputs/apk/debug/app-debug.apk